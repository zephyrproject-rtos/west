## A pykwalify schema for basic validation of the structure of a
## manifest YAML file.  (Full validation would require additional work,
## e.g. to validate that remote URLs obey the URL format specified in
## rfc1738.)
##
## This schema has similar semantics to the repo XML format:
##
## https://gerrit.googlesource.com/git-repo/+/master/docs/manifest-format.txt
##
## However, the features don't map 1:1.

# --------------------------------------------------------------
#
#  DO NOT CHANGE THIS FILE WITHOUT UPDATING THE DOCUMENTATION!
#
# --------------------------------------------------------------

type: map
mapping:
  # The "version" key is optional, and specifies a minimum version of
  # west (in semantic versioning, so X.Y <= X.Y.0 < X.Y.1 < (X+1).Y,
  # etc.) that is required to correctly parse the manifest data.
  #
  # This is supported starting with west v0.7 (i.e. it was added after
  # 0.6 was released). Earlier versions of west will treat manifest
  # data with a version key as malformed, so it can reliably be used
  # to prevent parsing on west v0.5 and v0.6 as well, though the error
  # messages users will receive will be a bit more confusing in that
  # case.
  version:
    required: false
    type: text

  # The "defaults" key specifies some default values used in the
  # rest of the manifest.
  defaults:
    required: false
    type: map
    mapping:
      # The name of the default remote.
      remote:
        required: false
        type: str
      # The default revision (master if not given).
      revision:
        required: false
        type: str

  # The "remotes" key specifies a sequence of remotes, each of which has a name
  # and a fetch URL base. These URL bases are concatenated with project names
  # (separated by a /) to form complete fetch URLs.
  remotes:
    required: false
    type: seq
    sequence:
      - type: map
        mapping:
          name:
            required: true
            type: str
          url-base:
            required: true
            type: str

  # The "projects" key specifies a sequence of "projects", each of which has a
  # remote, and may specify additional configuration.
  projects:
    required: true
    type: seq
    sequence:
      - type: map
        mapping:
          # Project's unique name.
          name:
            required: true
            type: str
          # Name of the project's remote. May not be combined with "url".
          remote:
            required: false
            type: str
          # If a remote is given, the project is fetched from this URL:
          #
          # remote.url-base + / + repo-path
          #
          # "repo-path" defaults to "name".
          repo-path:
            required: false
            type: str
          # Explicit project fetch URL. May not be combined with "remote".
          url:
            required: false
            type: str
          # Revision to check out. May be a branch, tag, or SHA.
          revision:
            required: false
            type: text        # SHAs could be only numbers
          # Path to check out, relative to the west installation root.
          # The default is the name.
          path:
            required: false
            type: str
          # Limits the clone depth of the project if given.
          clone-depth:
            required: false
            type: int
          # Path to a west-commands.yml inside the project.
          west-commands:
            required: false
            type: str

  # The "self" key specifies values for the project containing the manifest
  # file (the "manifest repository").
  self:
    required: false
    type: map
    mapping:
      path:
        required: false
        type: str
      # The manifest repository may also contain additional west
      # commands. See the above comment for details.
      west-commands:
        required: false
        type: str
